====================
Forundersøgelses Log
====================


Github repo setup.py og makefile undersøgelse
=============================================
Dato: 07/01/2019

Metode:
Ved at gennemløbe alle opskrifter(meta.yaml) fundet i Bioconda repositoriet
bioconda-recepies. Trak vi den url ud, hvor source koden har hjemme, for 
hver opskrift. Hvis denne url var et github repository, gemte vi url'en 
i en fil. 
Herefter hentede vi filtræet for hvert repository. Det er disse filtræer,
som vi har gennemløbet og trukket data ud af. 

Resultat:
Ud af i alt 4063 Bioconda pakker blev fundet, at 937 havde source kode 
liggende på Github.com. Af de 937 blev fundet 244 pakker med en setup.py 
i rodmappen og 237 pakker med en Makefile i rodmappen.


Github repo file extension undersøgelse  
=======================================
Dato: 18/01/2019

metode: 
Samme som ovenfor

Resultat:
Ud af i alt 4063 Bioconda pakker blev fundet, at 937 havde source kode 
liggende på Github.com. Af de 937 pakker var de 10 mest gennemgående
file extensions:
(Dataen skal læses som i f.eks. 826 pakker blev fundet en eller flere .md filer)
[('md', 826),
('gitignore', 657),
('txt', 547),
('py', 495),
('sh', 442),
('yml', 405),
('h', 363),
('png', 258),
('cpp', 250),
('c', 248),
('gz', 242),
('in', 240),
('fa', 179),
('pl', 174),
('R', 150),
('rst', 146),
('html', 142),
('pdf', 139),
('fasta', 139),
('bam', 129)]


Download og unpack undersøgelse 
===============================
Dato: 25/01/2019

Metode: 
Ved at gennemløbe alle opskrifter(meta.yaml) fundet i Bioconda repositoriet
bioconda-recepies. Trak vi den url ud, hvor source koden har hjemme, for 
hver opskrift. For alle url'er der ikke indeholdte github har vi downloaded 
source koden og konstrueret et filtræ.
Vi har herefter merged den nye data med dataen fra github. (se ovenfor) 

Resultat:
Ud af i alt 4063 Bioconda pakker blev fundet, at vi kunne konstruere filtræet
for 3196 pakker.
De 30 mest gennemgående file extensions var følgende:
[('txt', 1447), 
('md', 1379), 
('r', 1313), 
('rd', 1156), 
('py', 1032), 
('rds', 975), 
('pdf', 974), 
('yml', 912), 
('h', 784), 
('rnw', 730), 
('pl', 729), 
('gitignore', 715), 
('sh', 656), 
('c', 655), 
('in', 634), 
('png', 594), 
('html', 570), 
('pm', 563), 
('cfg', 516), 
('json', 500), 
('t', 480), 
('cpp', 474), 
('rda', 473), 
('bib', 452),
('gz', 401), 
('egg-info/pkg-info', 380), 
('rst', 369), 
('rmd', 319), 
('fa', 296), 
('rdata', 268)]
(Bemærk at 'egg-info/pkg-info' ikke er en file extension)

De 30 mest gennemgående filer i roden af filtræet var følgende: 
[('readme.md', 1293), 
('description', 1148), 
('namespace', 1147), 
('license', 1034), 
('.gitignore', 690), 
('setup.py', 689), 
('readme', 619), 
('manifest', 471), 
('changes', 465), 
('setup.cfg', 459), 
('makefile.pl', 453), 
('news', 444), 
('meta.yml', 443), 
('pkg-info', 430), 
('.travis.yml', 408), 
('manifest.in', 394), 
('meta.json', 362), 
('makefile', 317), 
('readme.rst', 260), 
('license.txt', 216), 
('install', 198), 
('changelog', 175), 
('copying', 167), 
('requirements.txt', 160), 
('dist.ini', 131), 
('configure.ac', 122), 
('authors', 121), 
('todo', 113), 
('configure', 108), 
('.gitmodules', 86)]
